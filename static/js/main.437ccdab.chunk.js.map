{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","NONE","reset","setState","reverse","sortByAlphabet","ALPHABET","sortByLength","LENGTH","this","goods","sort","a","b","length","className","type","classNames","onClick","map","list","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,wGAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KA4BE,IAAME,EAAb,4MACEC,MAAQ,CACNC,YAAY,EACZC,SAAUL,EAASM,MAHvB,EAMEC,MAAQ,WACN,EAAKC,SAAS,CAAEH,SAAUL,EAASM,KAAMF,YAAY,KAPzD,EAUEK,QAAU,WACR,EAAKD,UAAS,SAAAL,GAAK,MAAK,CACtBC,YAAaD,EAAMC,gBAZzB,EAgBEM,eAAiB,WACf,EAAKF,SAAS,CAAEH,SAAUL,EAASW,YAjBvC,EAoBEC,aAAe,WACb,EAAKJ,SAAS,CAAEH,SAAUL,EAASa,UArBvC,4CAwBE,WACE,MAAiCC,KAAKX,MAA9BC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,SAEdU,EAAK,UAAOd,GAclB,OAZII,IAAaL,EAASW,UACxBI,EAAMC,OAGJX,IAAaL,EAASa,QACxBE,EAAMC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,OAASD,EAAEC,UAGhCf,GACFW,EAAMN,UAIN,sBAAKW,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CAAE,WAAYjB,IAAaL,EAASW,WAEtCY,QAAST,KAAKJ,eANhB,iCAWA,wBACEW,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,WAAYjB,IAAaL,EAASa,SAEtCU,QAAST,KAAKF,aANhB,4BAWA,wBACES,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,YAAalB,IAEjBmB,QAAST,KAAKL,QANhB,qBAYEJ,GAAYD,EAER,wBACEiB,KAAK,SACLD,UAAU,4BACVG,QAAST,KAAKP,MAHhB,mBAQA,MAIR,6BACE,6BACGQ,EAAMS,KAAI,SAAAC,GAAI,OACb,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,iBA/FtC,GAAyBC,IAAMC,WC3C/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.437ccdab.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  return visibleGoods;\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  reset = () => {\n    this.setState({ sortType: SortType.NONE, isReversed: false });\n  };\n\n  reverse = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  sortByAlphabet = () => {\n    this.setState({ sortType: SortType.ALPHABET });\n  };\n\n  sortByLength = () => {\n    this.setState({ sortType: SortType.LENGTH });\n  };\n\n  render() {\n    const { isReversed, sortType } = this.state;\n\n    const goods = [...goodsFromServer];\n\n    if (sortType === SortType.ALPHABET) {\n      goods.sort();\n    }\n\n    if (sortType === SortType.LENGTH) {\n      goods.sort((a, b) => a.length - b.length);\n    }\n\n    if (isReversed) {\n      goods.reverse();\n    }\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-info',\n              { 'is-light': sortType !== SortType.ALPHABET },\n            )}\n            onClick={this.sortByAlphabet}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-success',\n              { 'is-light': sortType !== SortType.LENGTH },\n            )}\n            onClick={this.sortByLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-warning',\n              { 'is-light': !isReversed },\n            )}\n            onClick={this.reverse}\n          >\n            Reverse\n          </button>\n\n          {\n            sortType || isReversed\n              ? (\n                <button\n                  type=\"button\"\n                  className=\"button is-danger is-light\"\n                  onClick={this.reset}\n                >\n                  Reset\n                </button>\n              )\n              : ''\n          }\n        </div>\n\n        <ul>\n          <ul>\n            {goods.map(list => (\n              <li data-cy=\"Good\" key={list}>\n                {list}\n              </li>\n            ))}\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}